<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.site.dao.admin.CityAreaMapper">
  <resultMap id="BaseResultMap" type="com.web.site.entity.admin.CityArea">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="area_code" jdbcType="VARCHAR" property="areaCode" />
    <result column="area_name" jdbcType="VARCHAR" property="areaName" />
    <result column="area_level" jdbcType="VARCHAR" property="areaLevel" />
    <result column="parent_code" jdbcType="VARCHAR" property="parentCode" />
    <result column="zip_code" jdbcType="VARCHAR" property="zipCode" />
    <result column="version" jdbcType="TINYINT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, area_code, area_name, area_level, parent_code, zip_code, version
  </sql>
  <select id="selectByExample" parameterType="com.web.site.entity.admin.CityAreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from city_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from city_area
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from city_area
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.web.site.entity.admin.CityArea">
    insert into city_area (id, area_code, area_name, 
      area_level, parent_code, zip_code, 
      version)
    values (#{id,jdbcType=BIGINT}, #{areaCode,jdbcType=VARCHAR}, #{areaName,jdbcType=VARCHAR}, 
      #{areaLevel,jdbcType=VARCHAR}, #{parentCode,jdbcType=VARCHAR}, #{zipCode,jdbcType=VARCHAR}, 
      #{version,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.web.site.entity.admin.CityArea" useGeneratedKeys="true">
    insert into city_area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="areaCode != null">
        area_code,
      </if>
      <if test="areaName != null">
        area_name,
      </if>
      <if test="areaLevel != null">
        area_level,
      </if>
      <if test="parentCode != null">
        parent_code,
      </if>
      <if test="zipCode != null">
        zip_code,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="areaCode != null">
        #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="areaLevel != null">
        #{areaLevel,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.site.entity.admin.CityAreaExample" resultType="java.lang.Long">
    select count(*) from city_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.site.entity.admin.CityArea">
    update city_area
    <set>
      <if test="areaCode != null">
        area_code = #{areaCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null">
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="areaLevel != null">
        area_level = #{areaLevel,jdbcType=VARCHAR},
      </if>
      <if test="parentCode != null">
        parent_code = #{parentCode,jdbcType=VARCHAR},
      </if>
      <if test="zipCode != null">
        zip_code = #{zipCode,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.site.entity.admin.CityArea">
    update city_area
    set area_code = #{areaCode,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      area_level = #{areaLevel,jdbcType=VARCHAR},
      parent_code = #{parentCode,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      version = #{version,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.begin},#{page.length}
    </if>
  </sql>
</mapper>