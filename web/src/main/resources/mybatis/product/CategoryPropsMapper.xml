<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.web.site.dao.product.CategoryPropsMapper">
  <resultMap id="BaseResultMap" type="com.web.site.entity.product.CategoryProps">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="prop_name" jdbcType="VARCHAR" property="propName" />
    <result column="is_searchable" jdbcType="VARCHAR" property="isSearchable" />
    <result column="option_arr" jdbcType="VARCHAR" property="optionArr" />
    <result column="is_Required" jdbcType="VARCHAR" property="isRequired" />
    <result column="order_by" jdbcType="INTEGER" property="orderBy" />
    <result column="version" jdbcType="INTEGER" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, prop_name, is_searchable, option_arr, is_Required, order_by, version
  </sql>
  <select id="selectByExample" parameterType="com.web.site.entity.product.CategoryPropsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from category_props
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PageSuffix" />
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from category_props
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from category_props
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.web.site.entity.product.CategoryProps">
    insert into category_props (id, category_id, prop_name, 
      is_searchable, option_arr, is_Required, 
      order_by, version)
    values (#{id,jdbcType=BIGINT}, #{categoryId,jdbcType=BIGINT}, #{propName,jdbcType=VARCHAR}, 
      #{isSearchable,jdbcType=VARCHAR}, #{optionArr,jdbcType=VARCHAR}, #{isRequired,jdbcType=VARCHAR}, 
      #{orderBy,jdbcType=INTEGER}, #{version,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.web.site.entity.product.CategoryProps" useGeneratedKeys="true">
    insert into category_props
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="propName != null">
        prop_name,
      </if>
      <if test="isSearchable != null">
        is_searchable,
      </if>
      <if test="optionArr != null">
        option_arr,
      </if>
      <if test="isRequired != null">
        is_Required,
      </if>
      <if test="orderBy != null">
        order_by,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="propName != null">
        #{propName,jdbcType=VARCHAR},
      </if>
      <if test="isSearchable != null">
        #{isSearchable,jdbcType=VARCHAR},
      </if>
      <if test="optionArr != null">
        #{optionArr,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        #{isRequired,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null">
        #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.web.site.entity.product.CategoryPropsExample" resultType="java.lang.Long">
    select count(*) from category_props
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.web.site.entity.product.CategoryProps">
    update category_props
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="propName != null">
        prop_name = #{propName,jdbcType=VARCHAR},
      </if>
      <if test="isSearchable != null">
        is_searchable = #{isSearchable,jdbcType=VARCHAR},
      </if>
      <if test="optionArr != null">
        option_arr = #{optionArr,jdbcType=VARCHAR},
      </if>
      <if test="isRequired != null">
        is_Required = #{isRequired,jdbcType=VARCHAR},
      </if>
      <if test="orderBy != null">
        order_by = #{orderBy,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.web.site.entity.product.CategoryProps">
    update category_props
    set category_id = #{categoryId,jdbcType=BIGINT},
      prop_name = #{propName,jdbcType=VARCHAR},
      is_searchable = #{isSearchable,jdbcType=VARCHAR},
      option_arr = #{optionArr,jdbcType=VARCHAR},
      is_Required = #{isRequired,jdbcType=VARCHAR},
      order_by = #{orderBy,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="PageSuffix">
    <if test="page != null">
      limit #{page.begin},#{page.length}
    </if>
  </sql>
</mapper>